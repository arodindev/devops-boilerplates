apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }} 
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
    release: {{ .Values.taskapp.release }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      release: {{ .Values.taskapp.release }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        release: {{ .Values.taskapp.release }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.taskapp.service.targetPortBackend }}"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.taskapp.image.repository }}{{ .Release.Name }}:{{ default .Chart.AppVersion .Values.taskapp.image.version }}"
          ports:
            - containerPort: {{ .Values.taskapp.service.targetPortBackend }}
          imagePullPolicy: {{ .Values.taskapp.image.pullPolicy }}
          readinessProbe:
            httpGet:
              path: {{ .Values.taskapp.image.healthEndpoint }}
              port: {{ .Values.taskapp.service.targetPortBackend }}
            initialDelaySeconds: {{ .Values.taskapp.image.initialDelaySeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.taskapp.image.healthEndpoint }}
              port: {{ .Values.taskapp.service.targetPortBackend }}
            initialDelaySeconds: {{ .Values.taskapp.image.initialDelaySeconds }}
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "250m"
      #imagePullSecrets:  
      #        - name: ghcr
---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }} 
  namespace: {{ .Values.namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }} 
  minReplicas: {{ .Values.taskapp.hpa.minReplicas }}
  maxReplicas: {{ .Values.taskapp.hpa.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
