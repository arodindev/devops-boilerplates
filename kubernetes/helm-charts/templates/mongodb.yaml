apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongo.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.mongo.name }}
    release: {{ .Values.mongo.release }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.mongo.name }}
      release: {{ .Values.mongo.release }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongo.name }}
        release: {{ .Values.mongo.release }}
    spec:
      containers:
        - name: {{ .Values.mongo.name }}
          image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag }}"
          imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.mongo.service.targetPort }}
          volumeMounts:
            - name: storage
              mountPath: /data/db
              readOnly: false
          resources:
            limits:
              memory: 250Mi
              cpu: 100m
            requests:
              memory: 50Mi
              cpu: 50m
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.mongo.name }}
            readOnly: false
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.mongo.name }}
  namespace: {{ .Values.namespace }}
spec:
  capacity:
    storage: 256Mi
  accessModes:
    - {{ .Values.mongo.persistentVolume.accessMode }}
  hostPath:
    path: /tmp/db

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.mongo.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.mongo.name }}
    release: {{ .Values.mongo.release }}
spec:
  accessModes:
    - {{ .Values.mongo.persistentVolume.accessMode }}
  resources:
    requests:
      storage: 256Mi

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.mongo.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.mongo.name }}
    release: {{ .Values.mongo.release }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.mongo.service.port }}
      targetPort: {{ .Values.mongo.service.targetPort }}
  selector:
    app: {{ .Values.mongo.name }}
    release: {{ .Values.mongo.release }}